---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: buildah-testing
  labels:
    app.kubernetes.io/version: "0.1"
  annotations:
    tekton.dev/categories: Buildah Multi-Architecture Image Push
    tekton.dev/pipelines.minVersion: "0.17.0"
    tekton.dev/tags: image-push
    tekton.dev/platforms: "linux/amd64,linux/s390x,linux/ppc64le,linux/arm64"
spec:
  description: >-
    This buildah task will allow a user to push their multi-architecture container
    images to a given repository. It is based on the Buildah 0.3 task from hub.tekton.dev.
  params:
    - name: IMAGE
      description: Reference of the image buildah should push to the container registry
    - name: BUILDER_IMAGE
      description: The location of the buildah builder image.
      default: quay.io/buildah/stable:v1.23.3
    - name: TLSVERIFY
      description: Verify the TLS on the registry endpoint (for push/pull to a non-TLS registry)
      default: "true"
    - name: FORMAT
      description: The format of the built container, oci or docker
      default: "oci"
    - name: PUSH_EXTRA_ARGS
      description: Extra parameters passed for the push command when pushing images
      type: string
      default: ""
  workspaces:
    - name: containers
  results:
    - name: IMAGE_DIGEST
      description: Digest of the image just built.
  steps:
    - name: push
      image: $(params.BUILDER_IMAGE)
      workingDir: $(workspaces.containers.path)
      securityContext:
        privileged: true
      script: |
        yum install skopeo findutils -y

        # Create the local Manifest Location
        mkdir -p /var/lib/containers/storage

        echo "======================================================"
        buildah --root $(workspaces.containers.path) ls -a

        # Push the container image up to the container registry
        buildah manifest create containers

        for item in $(find $(workspaces.containers.path)/oci-archives/ -type f -printf "%f\n"); do
          # Define the filename with .tar.gz
          export containerName="`echo ${item} | sed 's/\.tar\.gz//g'`"

          echo "Copying $containerName to local volume..."

          # Untar the archive
          skopeo copy \
          oci-archive:$(workspaces.containers.path)/oci-archives/$item \
          containers-storage:$containerName

          echo "Adding $containerName to the containers manifest..."

          # Add the container archive to the containers manifest
          buildah manifest add containers $containerName
        done

        # List the container images in the local environment
        echo "======================================================"
        buildah images -a
        echo "======================================================"

        buildah manifest push --tls-verify=$(params.TLSVERIFY) \
        --format $(params.FORMAT) containers \
        $(params.PUSH_EXTRA_ARGS) \
        docker://$(params.IMAGE) --all
